{"version":3,"sources":["Components/Header.jsx","Components/Footer.jsx","Components/Dataretrival.jsx","Components/Input.jsx","Components/App.jsx","index.js"],"names":["Header","Footer","https","require","Data","props","string","charAt","toUpperCase","slice","capitalizeFirstLetter","cityname","userdata","icon","useState","iconrl","seticonurl","flag","setflag","Temperature","Maxtemp","Mintemp","Humidity","visibility","weather","pressure","windspeed","userdataarray","setuserdata","api","get","response","on","data","JSON","parse","main","temp","temp_max","temp_min","humidity","wind","speed","e","alert","className","id","src","alt","width","height","Entereddetail","query","setquery","value","onChange","event","val","target","placeholder","onClick","App","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff6b79a8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction Header(){\r\n\r\n\r\n    return (\r\n\r\n        <header>\r\n            <h1>Weather Map</h1>\r\n\r\n        </header>\r\n\r\n\r\n    );\r\n\r\n\r\n}\r\nexport default Header;","import React from \"react\";\r\n\r\n\r\nfunction Footer(){\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <footer>\r\n                    \r\n                    <p>copyright@2021</p>\r\n                    <p>By Siddharth Singh</p>\r\n\r\n                </footer>\r\n\r\n        </div>\r\n        \r\n\r\n\r\n    );\r\n\r\n\r\n}\r\nexport default Footer;","\r\nimport React, { useState } from \"react\";\r\nconst https = require(\"https\");\r\n\r\n\r\n\r\nfunction Data(props){\r\n\r\n\r\n    // This function just make the first letter of user entered input Capital\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n    // this string var hold the city name with forst letter capital\r\n    var string = capitalizeFirstLetter(props.cityname);\r\n\r\n\r\n\r\n    // this varibale will store the data that get from the API\r\n    var userdata =\"\";\r\n\r\n    //This hold the Icon id which further help to get the url for icon image\r\n    var icon = \"\";\r\n    \r\n\r\n\r\n    // this usestate variable hold the icon url to show the image \r\n    const[iconrl,seticonurl] = useState(\"\");\r\n\r\n    // this function update the iconurl\r\n    function updateurl(val){\r\n        seticonurl(val);\r\n    }\r\n\r\n\r\n\r\n    // It prevent the userdataarray getting updated again and again just update one time then make this false so that it cant entered in the funtion ehich update the data\r\n    const [flag,setflag] = useState(true);\r\n\r\n    //It contains all the data that we are printing in screen like temp,max-temp,min-temp,pressure ..etc and new data can be add easily\r\n    const [userdataarray,setuserdata] = useState({\r\n        Temperature:\"\",\r\n        Maxtemp :\"\",\r\n        Mintemp:\"\",\r\n        Humidity:\"\",\r\n        visibility:\"\",\r\n        weather:\"\",\r\n        pressure:\"\",\r\n        windspeed:\"\"\r\n    });\r\n\r\n\r\n\r\n    \r\n\r\n    // It update the data to be shown on screen when data is recieved from api\r\n    function updateuserarray(){      \r\n       \r\n        setuserdata({\r\n            Temperature:userdata.main.temp,\r\n            Maxtemp:userdata.main.temp_max,\r\n            Mintemp:userdata.main.temp_min,\r\n            Humidity:userdata.main.humidity,\r\n            visibility:userdata.visibility,\r\n            weather:userdata.weather[0].main,\r\n            pressure:userdata.main.pressure,\r\n            windspeed:userdata.wind.speed\r\n        })\r\n        setflag(false);\r\n          }\r\n\r\n\r\n    // url for api to get data\r\n    const api = \"https://api.openweathermap.org/data/2.5/weather?q=\"+props.cityname+\"&appid=ba4e04d2aa65eb728e2a9dc75afab968&units=metric\";\r\n        \r\n    \r\n    // function for calling the url and retriving the data\r\n    https.get(api,function(response){\r\n        response.on(\"data\",function(data){\r\n            userdata = JSON.parse(data);\r\n            try{\r\n                //Here checking if entered city name really exist or not or some error occured in retriving data\r\n                var checking = userdata.main.temp;\r\n                icon = userdata.weather[0].icon;\r\n                var temp = \"http://openweathermap.org/img/w/\" + icon + \".png\";\r\n                updateurl(temp);              \r\n                if(flag){\r\n                    updateuserarray();\r\n                    }      \r\n                \r\n            }\r\n            catch(e){\r\n                alert(\"City not found\");\r\n            }\r\n           })\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"note\">      \r\n            <h1> {string} Weather</h1>\r\n\r\n            <div id = \"tabel\" className=\"tabel\">          \r\n                <table >            \r\n                    <tbody>\r\n                        <tr>\r\n                            <th> <p> Avg  Temperature : </p></th>\r\n                            <th> <p> {userdataarray.Temperature} °C </p></th> \r\n                            <td> {  <img src = \"https://image.flaticon.com/icons/png/128/1684/1684375.png\" alt=\"temperature icon\" width=\"30\" height=\"30\"></img>} </td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n\r\n\r\n                    <tbody>   \r\n                        <tr>\r\n                            <th> <p>  Max Temperature : </p></th> \r\n                            <th> <p>  {userdataarray.Maxtemp} °C</p></th>\r\n                            <td> {  <img src = \"https://image.flaticon.com/icons/png/128/1684/1684375.png\" alt=\"temperature icon\" width=\"30\" height=\"30\"></img>} </td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n\r\n\r\n                    <tbody>\r\n                        <tr>\r\n                            <th> <p> Min Temperature : </p></th>\r\n                            <th> <p>  {userdataarray.Mintemp} °C</p></th>\r\n                            <td> {  <img src = \"https://image.flaticon.com/icons/png/128/1684/1684375.png\" alt=\"temperature icon\" width=\"30\" height=\"30\"></img>} </td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n\r\n\r\n                    <tbody>         \r\n                        <tr>\r\n                            <th> <p> Humidity :  </p> </th> \r\n                            <th> <p> {userdataarray.Humidity}% </p></th>\r\n                            <td> {  <img src = \"https://image.flaticon.com/icons/png/128/727/727790.png\" alt=\"humidity icon\" width=\"30\" height=\"30\"></img>} </td>\r\n                        </tr>\r\n                    </tbody> \r\n\r\n                    \r\n                    <tbody>\r\n                        <tr>\r\n                            <th> <p> Visibility : </p></th>\r\n                            <th> <p> {userdataarray.visibility} meters </p></th>\r\n                            <td> {  <img src = \"https://image.flaticon.com/icons/png/128/2210/2210317.png \" alt=\"visibility icon\" width=\"30\" height=\"30\" alt=\"image\"></img>} </td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n\r\n                    <tbody>\r\n                        <tr>\r\n                            <th> <p> Weather:  </p></th> \r\n                            <th> <p> {userdataarray.weather} </p></th>\r\n                            <td> {  <img src = {iconrl}></img>} </td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n\r\n\r\n                    <tbody>\r\n                        <tr>\r\n                            <th> <p> Pressure:  </p></th> \r\n                            <th> <p> {userdataarray.pressure} Pascal</p></th>\r\n                            <td> {  <img src = \"https://image.flaticon.com/icons/png/128/751/751836.png\" alt=\"pressure icon\" width=\"30\" height=\"30\" ></img>} </td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n\r\n\r\n                    <tbody>\r\n                        <tr>\r\n                            <th> <p> Wind Speed:  </p></th> \r\n                            <th> <p> {userdataarray.windspeed} m/s </p></th>\r\n                            <td> {  <img src = \"https://image.flaticon.com/icons/png/128/2272/2272225.png\" alt=\"speed icon\" width=\"30\" height=\"30\"></img>} </td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n\r\n                </table>\r\n            </div>  \r\n\r\n        \r\n\r\n        </div>\r\n       \r\n\r\n    );\r\n\r\n\r\n\r\n\r\n}\r\nexport default Data;","import React, { useState } from \"react\";\r\nimport Data from \"../Components/Dataretrival\"\r\n\r\nfunction Entereddetail(){\r\n    const [query,setquery] = useState(\"\"); //it collect the user entered city name\r\n    const [flag,setflag] = useState(false); //It handle the sitution i.e until user dont press submit button it prevent calling of apiu url\r\n\r\n\r\n    //This function set the value of Flag True .. that means when this function gets called then api call is being processes and data retrival started\r\n    function changeflag(){      \r\n        setflag(true);\r\n    }\r\n\r\n\r\n\r\n\r\n    //It handke the changes happen in the query variable i.e updating its value when gets changed\r\n    function handleChange(event){        \r\n        const val = event.target.value;\r\n        setquery(val);\r\n        setflag(false);\r\n    }\r\n\r\n\r\n\r\n    // Handle the submit button  and invoke the chngeflag function to retive the data from api\r\n    function handleClick(){\r\n        changeflag();     \r\n    }\r\n\r\n\r\n\r\n    return(   \r\n        <div className=\"form\" >          \r\n            <input value = {query} onChange= {handleChange} placeholder=\"Enter City Name\" />\r\n            <button onClick={handleClick}>            \r\n                <span>Submit</span>\r\n            </button>\r\n\r\n            {/*Now calling the api for retriving the data and it gets called when flag is true*/} \r\n            {flag?<Data cityname = {query}/> : null}\r\n        </div>\r\n       \r\n        );\r\n\r\n\r\n\r\n}\r\nexport default Entereddetail;","import React from \"react\";\r\nimport Header from \"../Components/Header\";\r\nimport Footer from \"../Components/Footer\";\r\nimport Entereddetail from \"../Components/Input\";\r\n\r\n\r\nfunction App(){\r\n    return (\r\n\r\n        <div>\r\n            \r\n            <Header />  {/*it shows the header part of web page */}\r\n            <Entereddetail /> {/*it do all the function */} \r\n            <Footer /> {/*it shows the footer part of web page includeing copyright tags */}\r\n\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"../src/Components/App\";\n\nReactDom.render( <App />  , document.getElementById(\"root\")  );\n\n\n"],"sourceRoot":""}